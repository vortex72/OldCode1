//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPWI.Web.Opticat {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credentials", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class Credentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncryptedPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncryptedPassword {
            get {
                return this.EncryptedPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptedPasswordField, value) != true)) {
                    this.EncryptedPasswordField = value;
                    this.RaisePropertyChanged("EncryptedPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpticatLookupFilter", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class OpticatLookupFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BaseVehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] IncludeProductLineIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LookupRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LookupStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MakeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PartTypeIDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedBedConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedBrakeConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedDriveTypeConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedEngineConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedSpringTypeConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedSteeringConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedTransmissionConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedWheelbaseConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SubCategoryIDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubmodelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseVehicleID {
            get {
                return this.BaseVehicleIDField;
            }
            set {
                if ((this.BaseVehicleIDField.Equals(value) != true)) {
                    this.BaseVehicleIDField = value;
                    this.RaisePropertyChanged("BaseVehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] IncludeProductLineIDs {
            get {
                return this.IncludeProductLineIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludeProductLineIDsField, value) != true)) {
                    this.IncludeProductLineIDsField = value;
                    this.RaisePropertyChanged("IncludeProductLineIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LookupRange {
            get {
                return this.LookupRangeField;
            }
            set {
                if ((this.LookupRangeField.Equals(value) != true)) {
                    this.LookupRangeField = value;
                    this.RaisePropertyChanged("LookupRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LookupStart {
            get {
                return this.LookupStartField;
            }
            set {
                if ((this.LookupStartField.Equals(value) != true)) {
                    this.LookupStartField = value;
                    this.RaisePropertyChanged("LookupStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MakeID {
            get {
                return this.MakeIDField;
            }
            set {
                if ((this.MakeIDField.Equals(value) != true)) {
                    this.MakeIDField = value;
                    this.RaisePropertyChanged("MakeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModelID {
            get {
                return this.ModelIDField;
            }
            set {
                if ((this.ModelIDField.Equals(value) != true)) {
                    this.ModelIDField = value;
                    this.RaisePropertyChanged("ModelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PartTypeIDList {
            get {
                return this.PartTypeIDListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartTypeIDListField, value) != true)) {
                    this.PartTypeIDListField = value;
                    this.RaisePropertyChanged("PartTypeIDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedBedConfigID {
            get {
                return this.SelectedBedConfigIDField;
            }
            set {
                if ((this.SelectedBedConfigIDField.Equals(value) != true)) {
                    this.SelectedBedConfigIDField = value;
                    this.RaisePropertyChanged("SelectedBedConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedBrakeConfigID {
            get {
                return this.SelectedBrakeConfigIDField;
            }
            set {
                if ((this.SelectedBrakeConfigIDField.Equals(value) != true)) {
                    this.SelectedBrakeConfigIDField = value;
                    this.RaisePropertyChanged("SelectedBrakeConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedDriveTypeConfigID {
            get {
                return this.SelectedDriveTypeConfigIDField;
            }
            set {
                if ((this.SelectedDriveTypeConfigIDField.Equals(value) != true)) {
                    this.SelectedDriveTypeConfigIDField = value;
                    this.RaisePropertyChanged("SelectedDriveTypeConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedEngineConfigID {
            get {
                return this.SelectedEngineConfigIDField;
            }
            set {
                if ((this.SelectedEngineConfigIDField.Equals(value) != true)) {
                    this.SelectedEngineConfigIDField = value;
                    this.RaisePropertyChanged("SelectedEngineConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedSpringTypeConfigID {
            get {
                return this.SelectedSpringTypeConfigIDField;
            }
            set {
                if ((this.SelectedSpringTypeConfigIDField.Equals(value) != true)) {
                    this.SelectedSpringTypeConfigIDField = value;
                    this.RaisePropertyChanged("SelectedSpringTypeConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedSteeringConfigID {
            get {
                return this.SelectedSteeringConfigIDField;
            }
            set {
                if ((this.SelectedSteeringConfigIDField.Equals(value) != true)) {
                    this.SelectedSteeringConfigIDField = value;
                    this.RaisePropertyChanged("SelectedSteeringConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedTransmissionConfigID {
            get {
                return this.SelectedTransmissionConfigIDField;
            }
            set {
                if ((this.SelectedTransmissionConfigIDField.Equals(value) != true)) {
                    this.SelectedTransmissionConfigIDField = value;
                    this.RaisePropertyChanged("SelectedTransmissionConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedWheelbaseConfigID {
            get {
                return this.SelectedWheelbaseConfigIDField;
            }
            set {
                if ((this.SelectedWheelbaseConfigIDField.Equals(value) != true)) {
                    this.SelectedWheelbaseConfigIDField = value;
                    this.RaisePropertyChanged("SelectedWheelbaseConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCategoryID {
            get {
                return this.SubCategoryIDField;
            }
            set {
                if ((this.SubCategoryIDField.Equals(value) != true)) {
                    this.SubCategoryIDField = value;
                    this.RaisePropertyChanged("SubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SubCategoryIDList {
            get {
                return this.SubCategoryIDListField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryIDListField, value) != true)) {
                    this.SubCategoryIDListField = value;
                    this.RaisePropertyChanged("SubCategoryIDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubmodelID {
            get {
                return this.SubmodelIDField;
            }
            set {
                if ((this.SubmodelIDField.Equals(value) != true)) {
                    this.SubmodelIDField = value;
                    this.RaisePropertyChanged("SubmodelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearID {
            get {
                return this.YearIDField;
            }
            set {
                if ((this.YearIDField.Equals(value) != true)) {
                    this.YearIDField = value;
                    this.RaisePropertyChanged("YearID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesMake", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesMake : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesModel", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBaseVehicle", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBaseVehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesMake MakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesModel ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesMake Make {
            get {
                return this.MakeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeField, value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesModel Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearID {
            get {
                return this.YearIDField;
            }
            set {
                if ((this.YearIDField.Equals(value) != true)) {
                    this.YearIDField = value;
                    this.RaisePropertyChanged("YearID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesSubModel", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesSubModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesTransmission", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesTransmission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesTransmissionDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesTransmissionDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesTransmissionDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesTransmissionDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElecControlledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlType {
            get {
                return this.ControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlTypeField, value) != true)) {
                    this.ControlTypeField = value;
                    this.RaisePropertyChanged("ControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElecControlled {
            get {
                return this.ElecControlledField;
            }
            set {
                if ((object.ReferenceEquals(this.ElecControlledField, value) != true)) {
                    this.ElecControlledField = value;
                    this.RaisePropertyChanged("ElecControlled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfrCode {
            get {
                return this.MfrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MfrCodeField, value) != true)) {
                    this.MfrCodeField = value;
                    this.RaisePropertyChanged("MfrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfrName {
            get {
                return this.MfrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MfrNameField, value) != true)) {
                    this.MfrNameField = value;
                    this.RaisePropertyChanged("MfrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumSpeeds {
            get {
                return this.NumSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.NumSpeedsField, value) != true)) {
                    this.NumSpeedsField = value;
                    this.RaisePropertyChanged("NumSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesVehicle", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesVehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBaseVehicle BaseVehicleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesRegion RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesSubModel SubModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBaseVehicle BaseVehicle {
            get {
                return this.BaseVehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseVehicleField, value) != true)) {
                    this.BaseVehicleField = value;
                    this.RaisePropertyChanged("BaseVehicle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesRegion Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesSubModel SubModel {
            get {
                return this.SubModelField;
            }
            set {
                if ((object.ReferenceEquals(this.SubModelField, value) != true)) {
                    this.SubModelField = value;
                    this.RaisePropertyChanged("SubModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((this.VehicleIDField.Equals(value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesRegion", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesCategory", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesSubCategory", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesSubCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesPartType", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesPartType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPositionQualifiers", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPositionQualifiers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesPosition[] QualifyingPositionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskPosition {
            get {
                return this.AskPositionField;
            }
            set {
                if ((this.AskPositionField.Equals(value) != true)) {
                    this.AskPositionField = value;
                    this.RaisePropertyChanged("AskPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayPosition {
            get {
                return this.DisplayPositionField;
            }
            set {
                if ((this.DisplayPositionField.Equals(value) != true)) {
                    this.DisplayPositionField = value;
                    this.RaisePropertyChanged("DisplayPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesPosition[] QualifyingPositions {
            get {
                return this.QualifyingPositionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifyingPositionsField, value) != true)) {
                    this.QualifyingPositionsField = value;
                    this.RaisePropertyChanged("QualifyingPositions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesPosition", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcVehicleQualifiers", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcVehicleQualifiers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskSubModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplaySubModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesVehicle[] QualifyingVehiclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalRegionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalSubModelsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskRegion {
            get {
                return this.AskRegionField;
            }
            set {
                if ((this.AskRegionField.Equals(value) != true)) {
                    this.AskRegionField = value;
                    this.RaisePropertyChanged("AskRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskSubModel {
            get {
                return this.AskSubModelField;
            }
            set {
                if ((this.AskSubModelField.Equals(value) != true)) {
                    this.AskSubModelField = value;
                    this.RaisePropertyChanged("AskSubModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayRegion {
            get {
                return this.DisplayRegionField;
            }
            set {
                if ((this.DisplayRegionField.Equals(value) != true)) {
                    this.DisplayRegionField = value;
                    this.RaisePropertyChanged("DisplayRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplaySubModel {
            get {
                return this.DisplaySubModelField;
            }
            set {
                if ((this.DisplaySubModelField.Equals(value) != true)) {
                    this.DisplaySubModelField = value;
                    this.RaisePropertyChanged("DisplaySubModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesVehicle[] QualifyingVehicles {
            get {
                return this.QualifyingVehiclesField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifyingVehiclesField, value) != true)) {
                    this.QualifyingVehiclesField = value;
                    this.RaisePropertyChanged("QualifyingVehicles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalRegions {
            get {
                return this.TotalRegionsField;
            }
            set {
                if ((this.TotalRegionsField.Equals(value) != true)) {
                    this.TotalRegionsField = value;
                    this.RaisePropertyChanged("TotalRegions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalSubModels {
            get {
                return this.TotalSubModelsField;
            }
            set {
                if ((this.TotalSubModelsField.Equals(value) != true)) {
                    this.TotalSubModelsField = value;
                    this.RaisePropertyChanged("TotalSubModels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcVehicleConfigQualifiers", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcVehicleConfigQualifiers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskBedConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskBodyStyleConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskBrakeConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskDriveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskEngineConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskMfrBodyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskSpringTypeConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskSteeringConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskTransmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskWheelbaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayBedConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayBodyStyleConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayBrakeConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayDriveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayEngineConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayMfrBodyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplaySpringTypeConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplaySteeringConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayTransmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayWheelbaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesVehicleConfig[] QualifyingVehicleConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalBedConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalBodyStyleConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalBrakeConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalDriveTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalEngineConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalMfrBodyCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalSpringTypeConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalSteeringConfigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalTransmissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalWheelbasesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskBedConfig {
            get {
                return this.AskBedConfigField;
            }
            set {
                if ((this.AskBedConfigField.Equals(value) != true)) {
                    this.AskBedConfigField = value;
                    this.RaisePropertyChanged("AskBedConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskBodyStyleConfig {
            get {
                return this.AskBodyStyleConfigField;
            }
            set {
                if ((this.AskBodyStyleConfigField.Equals(value) != true)) {
                    this.AskBodyStyleConfigField = value;
                    this.RaisePropertyChanged("AskBodyStyleConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskBrakeConfig {
            get {
                return this.AskBrakeConfigField;
            }
            set {
                if ((this.AskBrakeConfigField.Equals(value) != true)) {
                    this.AskBrakeConfigField = value;
                    this.RaisePropertyChanged("AskBrakeConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskDriveType {
            get {
                return this.AskDriveTypeField;
            }
            set {
                if ((this.AskDriveTypeField.Equals(value) != true)) {
                    this.AskDriveTypeField = value;
                    this.RaisePropertyChanged("AskDriveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskEngineConfig {
            get {
                return this.AskEngineConfigField;
            }
            set {
                if ((this.AskEngineConfigField.Equals(value) != true)) {
                    this.AskEngineConfigField = value;
                    this.RaisePropertyChanged("AskEngineConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskMfrBodyCode {
            get {
                return this.AskMfrBodyCodeField;
            }
            set {
                if ((this.AskMfrBodyCodeField.Equals(value) != true)) {
                    this.AskMfrBodyCodeField = value;
                    this.RaisePropertyChanged("AskMfrBodyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskSpringTypeConfig {
            get {
                return this.AskSpringTypeConfigField;
            }
            set {
                if ((this.AskSpringTypeConfigField.Equals(value) != true)) {
                    this.AskSpringTypeConfigField = value;
                    this.RaisePropertyChanged("AskSpringTypeConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskSteeringConfig {
            get {
                return this.AskSteeringConfigField;
            }
            set {
                if ((this.AskSteeringConfigField.Equals(value) != true)) {
                    this.AskSteeringConfigField = value;
                    this.RaisePropertyChanged("AskSteeringConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskTransmission {
            get {
                return this.AskTransmissionField;
            }
            set {
                if ((this.AskTransmissionField.Equals(value) != true)) {
                    this.AskTransmissionField = value;
                    this.RaisePropertyChanged("AskTransmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskWheelbase {
            get {
                return this.AskWheelbaseField;
            }
            set {
                if ((this.AskWheelbaseField.Equals(value) != true)) {
                    this.AskWheelbaseField = value;
                    this.RaisePropertyChanged("AskWheelbase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayBedConfig {
            get {
                return this.DisplayBedConfigField;
            }
            set {
                if ((this.DisplayBedConfigField.Equals(value) != true)) {
                    this.DisplayBedConfigField = value;
                    this.RaisePropertyChanged("DisplayBedConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayBodyStyleConfig {
            get {
                return this.DisplayBodyStyleConfigField;
            }
            set {
                if ((this.DisplayBodyStyleConfigField.Equals(value) != true)) {
                    this.DisplayBodyStyleConfigField = value;
                    this.RaisePropertyChanged("DisplayBodyStyleConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayBrakeConfig {
            get {
                return this.DisplayBrakeConfigField;
            }
            set {
                if ((this.DisplayBrakeConfigField.Equals(value) != true)) {
                    this.DisplayBrakeConfigField = value;
                    this.RaisePropertyChanged("DisplayBrakeConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayDriveType {
            get {
                return this.DisplayDriveTypeField;
            }
            set {
                if ((this.DisplayDriveTypeField.Equals(value) != true)) {
                    this.DisplayDriveTypeField = value;
                    this.RaisePropertyChanged("DisplayDriveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayEngineConfig {
            get {
                return this.DisplayEngineConfigField;
            }
            set {
                if ((this.DisplayEngineConfigField.Equals(value) != true)) {
                    this.DisplayEngineConfigField = value;
                    this.RaisePropertyChanged("DisplayEngineConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayMfrBodyCode {
            get {
                return this.DisplayMfrBodyCodeField;
            }
            set {
                if ((this.DisplayMfrBodyCodeField.Equals(value) != true)) {
                    this.DisplayMfrBodyCodeField = value;
                    this.RaisePropertyChanged("DisplayMfrBodyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplaySpringTypeConfig {
            get {
                return this.DisplaySpringTypeConfigField;
            }
            set {
                if ((this.DisplaySpringTypeConfigField.Equals(value) != true)) {
                    this.DisplaySpringTypeConfigField = value;
                    this.RaisePropertyChanged("DisplaySpringTypeConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplaySteeringConfig {
            get {
                return this.DisplaySteeringConfigField;
            }
            set {
                if ((this.DisplaySteeringConfigField.Equals(value) != true)) {
                    this.DisplaySteeringConfigField = value;
                    this.RaisePropertyChanged("DisplaySteeringConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayTransmission {
            get {
                return this.DisplayTransmissionField;
            }
            set {
                if ((this.DisplayTransmissionField.Equals(value) != true)) {
                    this.DisplayTransmissionField = value;
                    this.RaisePropertyChanged("DisplayTransmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayWheelbase {
            get {
                return this.DisplayWheelbaseField;
            }
            set {
                if ((this.DisplayWheelbaseField.Equals(value) != true)) {
                    this.DisplayWheelbaseField = value;
                    this.RaisePropertyChanged("DisplayWheelbase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesVehicleConfig[] QualifyingVehicleConfigs {
            get {
                return this.QualifyingVehicleConfigsField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifyingVehicleConfigsField, value) != true)) {
                    this.QualifyingVehicleConfigsField = value;
                    this.RaisePropertyChanged("QualifyingVehicleConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalBedConfigs {
            get {
                return this.TotalBedConfigsField;
            }
            set {
                if ((this.TotalBedConfigsField.Equals(value) != true)) {
                    this.TotalBedConfigsField = value;
                    this.RaisePropertyChanged("TotalBedConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalBodyStyleConfigs {
            get {
                return this.TotalBodyStyleConfigsField;
            }
            set {
                if ((this.TotalBodyStyleConfigsField.Equals(value) != true)) {
                    this.TotalBodyStyleConfigsField = value;
                    this.RaisePropertyChanged("TotalBodyStyleConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalBrakeConfigs {
            get {
                return this.TotalBrakeConfigsField;
            }
            set {
                if ((this.TotalBrakeConfigsField.Equals(value) != true)) {
                    this.TotalBrakeConfigsField = value;
                    this.RaisePropertyChanged("TotalBrakeConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalDriveTypes {
            get {
                return this.TotalDriveTypesField;
            }
            set {
                if ((this.TotalDriveTypesField.Equals(value) != true)) {
                    this.TotalDriveTypesField = value;
                    this.RaisePropertyChanged("TotalDriveTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalEngineConfigs {
            get {
                return this.TotalEngineConfigsField;
            }
            set {
                if ((this.TotalEngineConfigsField.Equals(value) != true)) {
                    this.TotalEngineConfigsField = value;
                    this.RaisePropertyChanged("TotalEngineConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalMfrBodyCodes {
            get {
                return this.TotalMfrBodyCodesField;
            }
            set {
                if ((this.TotalMfrBodyCodesField.Equals(value) != true)) {
                    this.TotalMfrBodyCodesField = value;
                    this.RaisePropertyChanged("TotalMfrBodyCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalSpringTypeConfigs {
            get {
                return this.TotalSpringTypeConfigsField;
            }
            set {
                if ((this.TotalSpringTypeConfigsField.Equals(value) != true)) {
                    this.TotalSpringTypeConfigsField = value;
                    this.RaisePropertyChanged("TotalSpringTypeConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalSteeringConfigs {
            get {
                return this.TotalSteeringConfigsField;
            }
            set {
                if ((this.TotalSteeringConfigsField.Equals(value) != true)) {
                    this.TotalSteeringConfigsField = value;
                    this.RaisePropertyChanged("TotalSteeringConfigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalTransmissions {
            get {
                return this.TotalTransmissionsField;
            }
            set {
                if ((this.TotalTransmissionsField.Equals(value) != true)) {
                    this.TotalTransmissionsField = value;
                    this.RaisePropertyChanged("TotalTransmissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalWheelbases {
            get {
                return this.TotalWheelbasesField;
            }
            set {
                if ((this.TotalWheelbasesField.Equals(value) != true)) {
                    this.TotalWheelbasesField = value;
                    this.RaisePropertyChanged("TotalWheelbases");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesVehicleConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesVehicleConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBedConfig BedConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBodyStyleConfig BodyStyleConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBrakeConfig BrakeConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesDriveType DriveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesEngineConfig EngineConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesMfrBodyCode MfrBodyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesSpringTypeConfig SpringTypeConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesSteeringConfig SteeringConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesTransmission TransmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesWheelbase WheelbaseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBedConfig BedConfig {
            get {
                return this.BedConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.BedConfigField, value) != true)) {
                    this.BedConfigField = value;
                    this.RaisePropertyChanged("BedConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBodyStyleConfig BodyStyleConfig {
            get {
                return this.BodyStyleConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyStyleConfigField, value) != true)) {
                    this.BodyStyleConfigField = value;
                    this.RaisePropertyChanged("BodyStyleConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBrakeConfig BrakeConfig {
            get {
                return this.BrakeConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeConfigField, value) != true)) {
                    this.BrakeConfigField = value;
                    this.RaisePropertyChanged("BrakeConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesDriveType DriveType {
            get {
                return this.DriveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DriveTypeField, value) != true)) {
                    this.DriveTypeField = value;
                    this.RaisePropertyChanged("DriveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesEngineConfig EngineConfig {
            get {
                return this.EngineConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineConfigField, value) != true)) {
                    this.EngineConfigField = value;
                    this.RaisePropertyChanged("EngineConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesMfrBodyCode MfrBodyCode {
            get {
                return this.MfrBodyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MfrBodyCodeField, value) != true)) {
                    this.MfrBodyCodeField = value;
                    this.RaisePropertyChanged("MfrBodyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesSpringTypeConfig SpringTypeConfig {
            get {
                return this.SpringTypeConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.SpringTypeConfigField, value) != true)) {
                    this.SpringTypeConfigField = value;
                    this.RaisePropertyChanged("SpringTypeConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesSteeringConfig SteeringConfig {
            get {
                return this.SteeringConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.SteeringConfigField, value) != true)) {
                    this.SteeringConfigField = value;
                    this.RaisePropertyChanged("SteeringConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesTransmission Transmission {
            get {
                return this.TransmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransmissionField, value) != true)) {
                    this.TransmissionField = value;
                    this.RaisePropertyChanged("Transmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleConfigID {
            get {
                return this.VehicleConfigIDField;
            }
            set {
                if ((this.VehicleConfigIDField.Equals(value) != true)) {
                    this.VehicleConfigIDField = value;
                    this.RaisePropertyChanged("VehicleConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((this.VehicleIDField.Equals(value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesWheelbase Wheelbase {
            get {
                return this.WheelbaseField;
            }
            set {
                if ((object.ReferenceEquals(this.WheelbaseField, value) != true)) {
                    this.WheelbaseField = value;
                    this.RaisePropertyChanged("Wheelbase");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBedConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBedConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBedConfigDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBedConfigDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBodyStyleConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBodyStyleConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBodyStyleConfigDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBodyStyleConfigDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBrakeConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBrakeConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesBrakeConfigDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesBrakeConfigDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesDriveType", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesDriveType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesEngineConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesEngineConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AppConfigEnginesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesEngineConfigDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AppConfigEngines {
            get {
                return this.AppConfigEnginesField;
            }
            set {
                if ((object.ReferenceEquals(this.AppConfigEnginesField, value) != true)) {
                    this.AppConfigEnginesField = value;
                    this.RaisePropertyChanged("AppConfigEngines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesEngineConfigDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesMfrBodyCode", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesMfrBodyCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesSpringTypeConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesSpringTypeConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesSpringTypeConfigDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesSpringTypeConfigDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesSteeringConfig", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesSteeringConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesSteeringConfigDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesSteeringConfigDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesWheelbase", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesWheelbase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.AcesWheelbaseDetails DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.AcesWheelbaseDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBedConfigDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBedConfigDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedLengthInchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedLengthMetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BedLengthInches {
            get {
                return this.BedLengthInchesField;
            }
            set {
                if ((object.ReferenceEquals(this.BedLengthInchesField, value) != true)) {
                    this.BedLengthInchesField = value;
                    this.RaisePropertyChanged("BedLengthInches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BedLengthMetric {
            get {
                return this.BedLengthMetricField;
            }
            set {
                if ((object.ReferenceEquals(this.BedLengthMetricField, value) != true)) {
                    this.BedLengthMetricField = value;
                    this.RaisePropertyChanged("BedLengthMetric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BedTypeName {
            get {
                return this.BedTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BedTypeNameField, value) != true)) {
                    this.BedTypeNameField = value;
                    this.RaisePropertyChanged("BedTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBodyStyleConfigDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBodyStyleConfigDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyNumDoorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyNumDoors {
            get {
                return this.BodyNumDoorsField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyNumDoorsField, value) != true)) {
                    this.BodyNumDoorsField = value;
                    this.RaisePropertyChanged("BodyNumDoors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyType {
            get {
                return this.BodyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyTypeField, value) != true)) {
                    this.BodyTypeField = value;
                    this.RaisePropertyChanged("BodyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesBrakeConfigDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesBrakeConfigDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeABSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrakeSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrontBrakeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RearBrakeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeABS {
            get {
                return this.BrakeABSField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeABSField, value) != true)) {
                    this.BrakeABSField = value;
                    this.RaisePropertyChanged("BrakeABS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrakeSystem {
            get {
                return this.BrakeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.BrakeSystemField, value) != true)) {
                    this.BrakeSystemField = value;
                    this.RaisePropertyChanged("BrakeSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrontBrakeType {
            get {
                return this.FrontBrakeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FrontBrakeTypeField, value) != true)) {
                    this.FrontBrakeTypeField = value;
                    this.RaisePropertyChanged("FrontBrakeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RearBrakeType {
            get {
                return this.RearBrakeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RearBrakeTypeField, value) != true)) {
                    this.RearBrakeTypeField = value;
                    this.RaisePropertyChanged("RearBrakeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesEngineConfigDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesEngineConfigDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AspirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CylinderHeadTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineBlockTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineBoreInchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineBoreMetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineCCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineCylindersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineLiterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineMfrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineStrokeInchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineStrokeMetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineVINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelDeliverySubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelDeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelSystemControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelSystemDesignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HorsePowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IgnitionSystemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KilowattPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValvesPerEngineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Aspiration {
            get {
                return this.AspirationField;
            }
            set {
                if ((object.ReferenceEquals(this.AspirationField, value) != true)) {
                    this.AspirationField = value;
                    this.RaisePropertyChanged("Aspiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CylinderHeadType {
            get {
                return this.CylinderHeadTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CylinderHeadTypeField, value) != true)) {
                    this.CylinderHeadTypeField = value;
                    this.RaisePropertyChanged("CylinderHeadType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineBlockType {
            get {
                return this.EngineBlockTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineBlockTypeField, value) != true)) {
                    this.EngineBlockTypeField = value;
                    this.RaisePropertyChanged("EngineBlockType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineBoreInches {
            get {
                return this.EngineBoreInchesField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineBoreInchesField, value) != true)) {
                    this.EngineBoreInchesField = value;
                    this.RaisePropertyChanged("EngineBoreInches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineBoreMetric {
            get {
                return this.EngineBoreMetricField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineBoreMetricField, value) != true)) {
                    this.EngineBoreMetricField = value;
                    this.RaisePropertyChanged("EngineBoreMetric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineCC {
            get {
                return this.EngineCCField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineCCField, value) != true)) {
                    this.EngineCCField = value;
                    this.RaisePropertyChanged("EngineCC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineCID {
            get {
                return this.EngineCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineCIDField, value) != true)) {
                    this.EngineCIDField = value;
                    this.RaisePropertyChanged("EngineCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineCylinders {
            get {
                return this.EngineCylindersField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineCylindersField, value) != true)) {
                    this.EngineCylindersField = value;
                    this.RaisePropertyChanged("EngineCylinders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineDesignation {
            get {
                return this.EngineDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineDesignationField, value) != true)) {
                    this.EngineDesignationField = value;
                    this.RaisePropertyChanged("EngineDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineLiter {
            get {
                return this.EngineLiterField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineLiterField, value) != true)) {
                    this.EngineLiterField = value;
                    this.RaisePropertyChanged("EngineLiter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineMfrName {
            get {
                return this.EngineMfrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineMfrNameField, value) != true)) {
                    this.EngineMfrNameField = value;
                    this.RaisePropertyChanged("EngineMfrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineStrokeInches {
            get {
                return this.EngineStrokeInchesField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineStrokeInchesField, value) != true)) {
                    this.EngineStrokeInchesField = value;
                    this.RaisePropertyChanged("EngineStrokeInches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineStrokeMetric {
            get {
                return this.EngineStrokeMetricField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineStrokeMetricField, value) != true)) {
                    this.EngineStrokeMetricField = value;
                    this.RaisePropertyChanged("EngineStrokeMetric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineVIN {
            get {
                return this.EngineVINField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineVINField, value) != true)) {
                    this.EngineVINField = value;
                    this.RaisePropertyChanged("EngineVIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineVersion {
            get {
                return this.EngineVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineVersionField, value) != true)) {
                    this.EngineVersionField = value;
                    this.RaisePropertyChanged("EngineVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelDeliverySubType {
            get {
                return this.FuelDeliverySubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelDeliverySubTypeField, value) != true)) {
                    this.FuelDeliverySubTypeField = value;
                    this.RaisePropertyChanged("FuelDeliverySubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelDeliveryType {
            get {
                return this.FuelDeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelDeliveryTypeField, value) != true)) {
                    this.FuelDeliveryTypeField = value;
                    this.RaisePropertyChanged("FuelDeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelSystemControlType {
            get {
                return this.FuelSystemControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelSystemControlTypeField, value) != true)) {
                    this.FuelSystemControlTypeField = value;
                    this.RaisePropertyChanged("FuelSystemControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelSystemDesign {
            get {
                return this.FuelSystemDesignField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelSystemDesignField, value) != true)) {
                    this.FuelSystemDesignField = value;
                    this.RaisePropertyChanged("FuelSystemDesign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelType {
            get {
                return this.FuelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelTypeField, value) != true)) {
                    this.FuelTypeField = value;
                    this.RaisePropertyChanged("FuelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HorsePower {
            get {
                return this.HorsePowerField;
            }
            set {
                if ((object.ReferenceEquals(this.HorsePowerField, value) != true)) {
                    this.HorsePowerField = value;
                    this.RaisePropertyChanged("HorsePower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IgnitionSystemType {
            get {
                return this.IgnitionSystemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IgnitionSystemTypeField, value) != true)) {
                    this.IgnitionSystemTypeField = value;
                    this.RaisePropertyChanged("IgnitionSystemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KilowattPower {
            get {
                return this.KilowattPowerField;
            }
            set {
                if ((object.ReferenceEquals(this.KilowattPowerField, value) != true)) {
                    this.KilowattPowerField = value;
                    this.RaisePropertyChanged("KilowattPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValvesPerEngine {
            get {
                return this.ValvesPerEngineField;
            }
            set {
                if ((object.ReferenceEquals(this.ValvesPerEngineField, value) != true)) {
                    this.ValvesPerEngineField = value;
                    this.RaisePropertyChanged("ValvesPerEngine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesSpringTypeConfigDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesSpringTypeConfigDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrontSpringTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RearSpringTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrontSpringType {
            get {
                return this.FrontSpringTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FrontSpringTypeField, value) != true)) {
                    this.FrontSpringTypeField = value;
                    this.RaisePropertyChanged("FrontSpringType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RearSpringType {
            get {
                return this.RearSpringTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RearSpringTypeField, value) != true)) {
                    this.RearSpringTypeField = value;
                    this.RaisePropertyChanged("RearSpringType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesSteeringConfigDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesSteeringConfigDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteeringSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteeringTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteeringSystem {
            get {
                return this.SteeringSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SteeringSystemField, value) != true)) {
                    this.SteeringSystemField = value;
                    this.RaisePropertyChanged("SteeringSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteeringType {
            get {
                return this.SteeringTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SteeringTypeField, value) != true)) {
                    this.SteeringTypeField = value;
                    this.RaisePropertyChanged("SteeringType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesWheelbaseDetails", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesWheelbaseDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetricField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inches {
            get {
                return this.InchesField;
            }
            set {
                if ((object.ReferenceEquals(this.InchesField, value) != true)) {
                    this.InchesField = value;
                    this.RaisePropertyChanged("Inches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Metric {
            get {
                return this.MetricField;
            }
            set {
                if ((object.ReferenceEquals(this.MetricField, value) != true)) {
                    this.MetricField = value;
                    this.RaisePropertyChanged("Metric");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPartApp", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPartApp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AAIABrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ImageURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLegacyAppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PVAppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PerCarQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProductLineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineMfrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AAIABrandID {
            get {
                return this.AAIABrandIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AAIABrandIDField, value) != true)) {
                    this.AAIABrandIDField = value;
                    this.RaisePropertyChanged("AAIABrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ImageURI {
            get {
                return this.ImageURIField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURIField, value) != true)) {
                    this.ImageURIField = value;
                    this.RaisePropertyChanged("ImageURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegacyApp {
            get {
                return this.IsLegacyAppField;
            }
            set {
                if ((this.IsLegacyAppField.Equals(value) != true)) {
                    this.IsLegacyAppField = value;
                    this.RaisePropertyChanged("IsLegacyApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PVAppID {
            get {
                return this.PVAppIDField;
            }
            set {
                if ((this.PVAppIDField.Equals(value) != true)) {
                    this.PVAppIDField = value;
                    this.RaisePropertyChanged("PVAppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PerCarQty {
            get {
                return this.PerCarQtyField;
            }
            set {
                if ((this.PerCarQtyField.Equals(value) != true)) {
                    this.PerCarQtyField = value;
                    this.RaisePropertyChanged("PerCarQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineMfrCode {
            get {
                return this.ProductLineMfrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineMfrCodeField, value) != true)) {
                    this.ProductLineMfrCodeField = value;
                    this.RaisePropertyChanged("ProductLineMfrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineName {
            get {
                return this.ProductLineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineNameField, value) != true)) {
                    this.ProductLineNameField = value;
                    this.RaisePropertyChanged("ProductLineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleConfigID {
            get {
                return this.VehicleConfigIDField;
            }
            set {
                if ((this.VehicleConfigIDField.Equals(value) != true)) {
                    this.VehicleConfigIDField = value;
                    this.RaisePropertyChanged("VehicleConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((this.VehicleIDField.Equals(value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcesPartAppsContainer", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class AcesPartAppsContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPartApp[] AcesPartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPartAppMetaInformation[] AcesPartsWithInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcProduct[] AcesProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPartApp[] AcesParts {
            get {
                return this.AcesPartsField;
            }
            set {
                if ((object.ReferenceEquals(this.AcesPartsField, value) != true)) {
                    this.AcesPartsField = value;
                    this.RaisePropertyChanged("AcesParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPartAppMetaInformation[] AcesPartsWithInformation {
            get {
                return this.AcesPartsWithInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AcesPartsWithInformationField, value) != true)) {
                    this.AcesPartsWithInformationField = value;
                    this.RaisePropertyChanged("AcesPartsWithInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcProduct[] AcesProducts {
            get {
                return this.AcesProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.AcesProductsField, value) != true)) {
                    this.AcesProductsField = value;
                    this.RaisePropertyChanged("AcesProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Range {
            get {
                return this.RangeField;
            }
            set {
                if ((this.RangeField.Equals(value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPartAppMetaInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPartAppMetaInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandAAIAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPartAppExtendedInformation ExtendedInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ImageURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketingHeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketingSubHeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketingURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfrLogoURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MinimumOrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumOrderQuantityUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPackageHazmatInformation[] PackageHazmatInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPackageInformation[] PackageInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPartDescriptions PartDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPartInterchangeInformation[] PartInterchangeInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcPriceInformation PriceInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSubGroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificationsURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyURIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandAAIAID {
            get {
                return this.BrandAAIAIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandAAIAIDField, value) != true)) {
                    this.BrandAAIAIDField = value;
                    this.RaisePropertyChanged("BrandAAIAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandLabel {
            get {
                return this.BrandLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandLabelField, value) != true)) {
                    this.BrandLabelField = value;
                    this.RaisePropertyChanged("BrandLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPartAppExtendedInformation ExtendedInformation {
            get {
                return this.ExtendedInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedInformationField, value) != true)) {
                    this.ExtendedInformationField = value;
                    this.RaisePropertyChanged("ExtendedInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ImageURI {
            get {
                return this.ImageURIField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURIField, value) != true)) {
                    this.ImageURIField = value;
                    this.RaisePropertyChanged("ImageURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidProductID {
            get {
                return this.IsValidProductIDField;
            }
            set {
                if ((this.IsValidProductIDField.Equals(value) != true)) {
                    this.IsValidProductIDField = value;
                    this.RaisePropertyChanged("IsValidProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketingHeading {
            get {
                return this.MarketingHeadingField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketingHeadingField, value) != true)) {
                    this.MarketingHeadingField = value;
                    this.RaisePropertyChanged("MarketingHeading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketingSubHeading {
            get {
                return this.MarketingSubHeadingField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketingSubHeadingField, value) != true)) {
                    this.MarketingSubHeadingField = value;
                    this.RaisePropertyChanged("MarketingSubHeading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketingURI {
            get {
                return this.MarketingURIField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketingURIField, value) != true)) {
                    this.MarketingURIField = value;
                    this.RaisePropertyChanged("MarketingURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfrLogoURI {
            get {
                return this.MfrLogoURIField;
            }
            set {
                if ((object.ReferenceEquals(this.MfrLogoURIField, value) != true)) {
                    this.MfrLogoURIField = value;
                    this.RaisePropertyChanged("MfrLogoURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MinimumOrderQuantity {
            get {
                return this.MinimumOrderQuantityField;
            }
            set {
                if ((this.MinimumOrderQuantityField.Equals(value) != true)) {
                    this.MinimumOrderQuantityField = value;
                    this.RaisePropertyChanged("MinimumOrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumOrderQuantityUOM {
            get {
                return this.MinimumOrderQuantityUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumOrderQuantityUOMField, value) != true)) {
                    this.MinimumOrderQuantityUOMField = value;
                    this.RaisePropertyChanged("MinimumOrderQuantityUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPackageHazmatInformation[] PackageHazmatInformation {
            get {
                return this.PackageHazmatInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageHazmatInformationField, value) != true)) {
                    this.PackageHazmatInformationField = value;
                    this.RaisePropertyChanged("PackageHazmatInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPackageInformation[] PackageInformation {
            get {
                return this.PackageInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageInformationField, value) != true)) {
                    this.PackageInformationField = value;
                    this.RaisePropertyChanged("PackageInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPartDescriptions PartDescriptions {
            get {
                return this.PartDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionsField, value) != true)) {
                    this.PartDescriptionsField = value;
                    this.RaisePropertyChanged("PartDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPartInterchangeInformation[] PartInterchangeInformation {
            get {
                return this.PartInterchangeInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.PartInterchangeInformationField, value) != true)) {
                    this.PartInterchangeInformationField = value;
                    this.RaisePropertyChanged("PartInterchangeInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcPriceInformation PriceInformation {
            get {
                return this.PriceInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceInformationField, value) != true)) {
                    this.PriceInformationField = value;
                    this.RaisePropertyChanged("PriceInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductFileID {
            get {
                return this.ProductFileIDField;
            }
            set {
                if ((this.ProductFileIDField.Equals(value) != true)) {
                    this.ProductFileIDField = value;
                    this.RaisePropertyChanged("ProductFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSubGroupCode {
            get {
                return this.ProductSubGroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSubGroupCodeField, value) != true)) {
                    this.ProductSubGroupCodeField = value;
                    this.RaisePropertyChanged("ProductSubGroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificationsURI {
            get {
                return this.SpecificationsURIField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationsURIField, value) != true)) {
                    this.SpecificationsURIField = value;
                    this.RaisePropertyChanged("SpecificationsURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyURI {
            get {
                return this.WarrantyURIField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyURIField, value) != true)) {
                    this.WarrantyURIField = value;
                    this.RaisePropertyChanged("WarrantyURI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcProduct", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AAIABrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ImageURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PVAppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PerCarQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProductLineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineMfrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] VehicleConfigIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AAIABrandID {
            get {
                return this.AAIABrandIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AAIABrandIDField, value) != true)) {
                    this.AAIABrandIDField = value;
                    this.RaisePropertyChanged("AAIABrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ImageURI {
            get {
                return this.ImageURIField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURIField, value) != true)) {
                    this.ImageURIField = value;
                    this.RaisePropertyChanged("ImageURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PVAppID {
            get {
                return this.PVAppIDField;
            }
            set {
                if ((this.PVAppIDField.Equals(value) != true)) {
                    this.PVAppIDField = value;
                    this.RaisePropertyChanged("PVAppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartKey {
            get {
                return this.PartKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartKeyField, value) != true)) {
                    this.PartKeyField = value;
                    this.RaisePropertyChanged("PartKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PerCarQty {
            get {
                return this.PerCarQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.PerCarQtyField, value) != true)) {
                    this.PerCarQtyField = value;
                    this.RaisePropertyChanged("PerCarQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionIDField, value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineMfrCode {
            get {
                return this.ProductLineMfrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineMfrCodeField, value) != true)) {
                    this.ProductLineMfrCodeField = value;
                    this.RaisePropertyChanged("ProductLineMfrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineName {
            get {
                return this.ProductLineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineNameField, value) != true)) {
                    this.ProductLineNameField = value;
                    this.RaisePropertyChanged("ProductLineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] VehicleConfigID {
            get {
                return this.VehicleConfigIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleConfigIDField, value) != true)) {
                    this.VehicleConfigIDField = value;
                    this.RaisePropertyChanged("VehicleConfigID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPartAppExtendedInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPartAppExtendedInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmissionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HarmonizedTariffCodeHTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasApplicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDiscontinuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsHazardousMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsMSDSRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsRemanufacturedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsSuspendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LifeCycleStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MSDSSheetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MSDSURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MaximumCasesPerPalletLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NewPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OldPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PalletLayerMaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopularityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> WarrantyMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WarranyMilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryOfOrigin {
            get {
                return this.CountryOfOriginField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryOfOriginField, value) != true)) {
                    this.CountryOfOriginField = value;
                    this.RaisePropertyChanged("CountryOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmissionCode {
            get {
                return this.EmissionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmissionCodeField, value) != true)) {
                    this.EmissionCodeField = value;
                    this.RaisePropertyChanged("EmissionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HarmonizedTariffCodeHTS {
            get {
                return this.HarmonizedTariffCodeHTSField;
            }
            set {
                if ((object.ReferenceEquals(this.HarmonizedTariffCodeHTSField, value) != true)) {
                    this.HarmonizedTariffCodeHTSField = value;
                    this.RaisePropertyChanged("HarmonizedTariffCodeHTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasApplications {
            get {
                return this.HasApplicationsField;
            }
            set {
                if ((this.HasApplicationsField.Equals(value) != true)) {
                    this.HasApplicationsField = value;
                    this.RaisePropertyChanged("HasApplications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDiscontinued {
            get {
                return this.IsDiscontinuedField;
            }
            set {
                if ((this.IsDiscontinuedField.Equals(value) != true)) {
                    this.IsDiscontinuedField = value;
                    this.RaisePropertyChanged("IsDiscontinued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsHazardousMaterial {
            get {
                return this.IsHazardousMaterialField;
            }
            set {
                if ((this.IsHazardousMaterialField.Equals(value) != true)) {
                    this.IsHazardousMaterialField = value;
                    this.RaisePropertyChanged("IsHazardousMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsMSDSRequired {
            get {
                return this.IsMSDSRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.IsMSDSRequiredField, value) != true)) {
                    this.IsMSDSRequiredField = value;
                    this.RaisePropertyChanged("IsMSDSRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsRemanufactured {
            get {
                return this.IsRemanufacturedField;
            }
            set {
                if ((this.IsRemanufacturedField.Equals(value) != true)) {
                    this.IsRemanufacturedField = value;
                    this.RaisePropertyChanged("IsRemanufactured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSuspended {
            get {
                return this.IsSuspendedField;
            }
            set {
                if ((this.IsSuspendedField.Equals(value) != true)) {
                    this.IsSuspendedField = value;
                    this.RaisePropertyChanged("IsSuspended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTaxable {
            get {
                return this.IsTaxableField;
            }
            set {
                if ((this.IsTaxableField.Equals(value) != true)) {
                    this.IsTaxableField = value;
                    this.RaisePropertyChanged("IsTaxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LifeCycleStatusCode {
            get {
                return this.LifeCycleStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LifeCycleStatusCodeField, value) != true)) {
                    this.LifeCycleStatusCodeField = value;
                    this.RaisePropertyChanged("LifeCycleStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MSDSSheetNumber {
            get {
                return this.MSDSSheetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MSDSSheetNumberField, value) != true)) {
                    this.MSDSSheetNumberField = value;
                    this.RaisePropertyChanged("MSDSSheetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MSDSURI {
            get {
                return this.MSDSURIField;
            }
            set {
                if ((object.ReferenceEquals(this.MSDSURIField, value) != true)) {
                    this.MSDSURIField = value;
                    this.RaisePropertyChanged("MSDSURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaximumCasesPerPalletLayer {
            get {
                return this.MaximumCasesPerPalletLayerField;
            }
            set {
                if ((this.MaximumCasesPerPalletLayerField.Equals(value) != true)) {
                    this.MaximumCasesPerPalletLayerField = value;
                    this.RaisePropertyChanged("MaximumCasesPerPalletLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> NewPart {
            get {
                return this.NewPartField;
            }
            set {
                if ((this.NewPartField.Equals(value) != true)) {
                    this.NewPartField = value;
                    this.RaisePropertyChanged("NewPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OldPart {
            get {
                return this.OldPartField;
            }
            set {
                if ((this.OldPartField.Equals(value) != true)) {
                    this.OldPartField = value;
                    this.RaisePropertyChanged("OldPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PalletLayerMaximum {
            get {
                return this.PalletLayerMaximumField;
            }
            set {
                if ((this.PalletLayerMaximumField.Equals(value) != true)) {
                    this.PalletLayerMaximumField = value;
                    this.RaisePropertyChanged("PalletLayerMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PopularityCode {
            get {
                return this.PopularityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PopularityCodeField, value) != true)) {
                    this.PopularityCodeField = value;
                    this.RaisePropertyChanged("PopularityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockStatusCode {
            get {
                return this.StockStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockStatusCodeField, value) != true)) {
                    this.StockStatusCodeField = value;
                    this.RaisePropertyChanged("StockStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> WarrantyMonths {
            get {
                return this.WarrantyMonthsField;
            }
            set {
                if ((this.WarrantyMonthsField.Equals(value) != true)) {
                    this.WarrantyMonthsField = value;
                    this.RaisePropertyChanged("WarrantyMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WarranyMiles {
            get {
                return this.WarranyMilesField;
            }
            set {
                if ((this.WarranyMilesField.Equals(value) != true)) {
                    this.WarranyMilesField = value;
                    this.RaisePropertyChanged("WarranyMiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPartDescriptions", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPartDescriptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviatedDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociatedCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeySearchWordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LifeCycleStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketingDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SlangDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UNSPSCDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VMRSDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyTypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbbreviatedDescription {
            get {
                return this.AbbreviatedDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviatedDescriptionField, value) != true)) {
                    this.AbbreviatedDescriptionField = value;
                    this.RaisePropertyChanged("AbbreviatedDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociatedComments {
            get {
                return this.AssociatedCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociatedCommentsField, value) != true)) {
                    this.AssociatedCommentsField = value;
                    this.RaisePropertyChanged("AssociatedComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDescription {
            get {
                return this.InvoiceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDescriptionField, value) != true)) {
                    this.InvoiceDescriptionField = value;
                    this.RaisePropertyChanged("InvoiceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeySearchWords {
            get {
                return this.KeySearchWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeySearchWordsField, value) != true)) {
                    this.KeySearchWordsField = value;
                    this.RaisePropertyChanged("KeySearchWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelDescription {
            get {
                return this.LabelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelDescriptionField, value) != true)) {
                    this.LabelDescriptionField = value;
                    this.RaisePropertyChanged("LabelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LifeCycleStatusDescription {
            get {
                return this.LifeCycleStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LifeCycleStatusDescriptionField, value) != true)) {
                    this.LifeCycleStatusDescriptionField = value;
                    this.RaisePropertyChanged("LifeCycleStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketingDescription {
            get {
                return this.MarketingDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketingDescriptionField, value) != true)) {
                    this.MarketingDescriptionField = value;
                    this.RaisePropertyChanged("MarketingDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartTypeDescription {
            get {
                return this.PartTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartTypeDescriptionField, value) != true)) {
                    this.PartTypeDescriptionField = value;
                    this.RaisePropertyChanged("PartTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SlangDescription {
            get {
                return this.SlangDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SlangDescriptionField, value) != true)) {
                    this.SlangDescriptionField = value;
                    this.RaisePropertyChanged("SlangDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UNSPSCDescription {
            get {
                return this.UNSPSCDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UNSPSCDescriptionField, value) != true)) {
                    this.UNSPSCDescriptionField = value;
                    this.RaisePropertyChanged("UNSPSCDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VMRSDescription {
            get {
                return this.VMRSDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VMRSDescriptionField, value) != true)) {
                    this.VMRSDescriptionField = value;
                    this.RaisePropertyChanged("VMRSDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyTypeDescription {
            get {
                return this.WarrantyTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyTypeDescriptionField, value) != true)) {
                    this.WarrantyTypeDescriptionField = value;
                    this.RaisePropertyChanged("WarrantyTypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPriceInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPriceInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceSheetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceSheetNumber {
            get {
                return this.PriceSheetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceSheetNumberField, value) != true)) {
                    this.PriceSheetNumberField = value;
                    this.RaisePropertyChanged("PriceSheetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPackageHazmatInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPackageHazmatInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeQualifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazardousClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBulkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDomesticShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegulatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaintenanceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PackageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulatingCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransportMethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassCode {
            get {
                return this.ClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassCodeField, value) != true)) {
                    this.ClassCodeField = value;
                    this.RaisePropertyChanged("ClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeQualifier {
            get {
                return this.CodeQualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeQualifierField, value) != true)) {
                    this.CodeQualifierField = value;
                    this.RaisePropertyChanged("CodeQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazardousClass {
            get {
                return this.HazardousClassField;
            }
            set {
                if ((object.ReferenceEquals(this.HazardousClassField, value) != true)) {
                    this.HazardousClassField = value;
                    this.RaisePropertyChanged("HazardousClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBulk {
            get {
                return this.IsBulkField;
            }
            set {
                if ((this.IsBulkField.Equals(value) != true)) {
                    this.IsBulkField = value;
                    this.RaisePropertyChanged("IsBulk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDomesticShipping {
            get {
                return this.IsDomesticShippingField;
            }
            set {
                if ((this.IsDomesticShippingField.Equals(value) != true)) {
                    this.IsDomesticShippingField = value;
                    this.RaisePropertyChanged("IsDomesticShipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegulated {
            get {
                return this.IsRegulatedField;
            }
            set {
                if ((this.IsRegulatedField.Equals(value) != true)) {
                    this.IsRegulatedField = value;
                    this.RaisePropertyChanged("IsRegulated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaintenanceType {
            get {
                return this.MaintenanceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaintenanceTypeField, value) != true)) {
                    this.MaintenanceTypeField = value;
                    this.RaisePropertyChanged("MaintenanceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((this.PackageIDField.Equals(value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegulatingCountryCode {
            get {
                return this.RegulatingCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulatingCountryCodeField, value) != true)) {
                    this.RegulatingCountryCodeField = value;
                    this.RaisePropertyChanged("RegulatingCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransportMethod {
            get {
                return this.TransportMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportMethodField, value) != true)) {
                    this.TransportMethodField = value;
                    this.RaisePropertyChanged("TransportMethod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPackageInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPackageInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodeCharactersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DimensionalWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionsUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EachesQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GTINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderablePackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WeightVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarCodeCharacters {
            get {
                return this.BarCodeCharactersField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodeCharactersField, value) != true)) {
                    this.BarCodeCharactersField = value;
                    this.RaisePropertyChanged("BarCodeCharacters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DimensionalWeight {
            get {
                return this.DimensionalWeightField;
            }
            set {
                if ((this.DimensionalWeightField.Equals(value) != true)) {
                    this.DimensionalWeightField = value;
                    this.RaisePropertyChanged("DimensionalWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionsUOM {
            get {
                return this.DimensionsUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsUOMField, value) != true)) {
                    this.DimensionsUOMField = value;
                    this.RaisePropertyChanged("DimensionsUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EachesQuantity {
            get {
                return this.EachesQuantityField;
            }
            set {
                if ((this.EachesQuantityField.Equals(value) != true)) {
                    this.EachesQuantityField = value;
                    this.RaisePropertyChanged("EachesQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GTIN {
            get {
                return this.GTINField;
            }
            set {
                if ((object.ReferenceEquals(this.GTINField, value) != true)) {
                    this.GTINField = value;
                    this.RaisePropertyChanged("GTIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderablePackage {
            get {
                return this.OrderablePackageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderablePackageField, value) != true)) {
                    this.OrderablePackageField = value;
                    this.RaisePropertyChanged("OrderablePackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WeightVariance {
            get {
                return this.WeightVarianceField;
            }
            set {
                if ((this.WeightVarianceField.Equals(value) != true)) {
                    this.WeightVarianceField = value;
                    this.RaisePropertyChanged("WeightVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcPartInterchangeInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcPartInterchangeInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandAAIAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandAAIAID {
            get {
                return this.BrandAAIAIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandAAIAIDField, value) != true)) {
                    this.BrandAAIAIDField = value;
                    this.RaisePropertyChanged("BrandAAIAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandLabel {
            get {
                return this.BrandLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandLabelField, value) != true)) {
                    this.BrandLabelField = value;
                    this.RaisePropertyChanged("BrandLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateNotes {
            get {
                return this.PrivateNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateNotesField, value) != true)) {
                    this.PrivateNotesField = value;
                    this.RaisePropertyChanged("PrivateNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityCode {
            get {
                return this.QualityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityCodeField, value) != true)) {
                    this.QualityCodeField = value;
                    this.RaisePropertyChanged("QualityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductInformationContainer", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class ProductInformationContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EPWI.Web.Opticat.EpcProductExt[] AcesProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPWI.Web.Opticat.EpcProductExt[] AcesProducts {
            get {
                return this.AcesProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.AcesProductsField, value) != true)) {
                    this.AcesProductsField = value;
                    this.RaisePropertyChanged("AcesProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Range {
            get {
                return this.RangeField;
            }
            set {
                if ((this.RangeField.Equals(value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpcProductExt", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class EpcProductExt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AAIABrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] EngineDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ImageURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerCarQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProductLineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineMfrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AAIABrandID {
            get {
                return this.AAIABrandIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AAIABrandIDField, value) != true)) {
                    this.AAIABrandIDField = value;
                    this.RaisePropertyChanged("AAIABrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((this.ConfigIDField.Equals(value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] EngineDescriptions {
            get {
                return this.EngineDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineDescriptionsField, value) != true)) {
                    this.EngineDescriptionsField = value;
                    this.RaisePropertyChanged("EngineDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ImageURI {
            get {
                return this.ImageURIField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURIField, value) != true)) {
                    this.ImageURIField = value;
                    this.RaisePropertyChanged("ImageURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartKey {
            get {
                return this.PartKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartKeyField, value) != true)) {
                    this.PartKeyField = value;
                    this.RaisePropertyChanged("PartKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartTypeDescription {
            get {
                return this.PartTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartTypeDescriptionField, value) != true)) {
                    this.PartTypeDescriptionField = value;
                    this.RaisePropertyChanged("PartTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartTypeID {
            get {
                return this.PartTypeIDField;
            }
            set {
                if ((this.PartTypeIDField.Equals(value) != true)) {
                    this.PartTypeIDField = value;
                    this.RaisePropertyChanged("PartTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerCarQty {
            get {
                return this.PerCarQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.PerCarQtyField, value) != true)) {
                    this.PerCarQtyField = value;
                    this.RaisePropertyChanged("PerCarQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionDescription {
            get {
                return this.PositionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionDescriptionField, value) != true)) {
                    this.PositionDescriptionField = value;
                    this.RaisePropertyChanged("PositionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionIDField, value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineMfrCode {
            get {
                return this.ProductLineMfrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineMfrCodeField, value) != true)) {
                    this.ProductLineMfrCodeField = value;
                    this.RaisePropertyChanged("ProductLineMfrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineName {
            get {
                return this.ProductLineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineNameField, value) != true)) {
                    this.ProductLineNameField = value;
                    this.RaisePropertyChanged("ProductLineName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuyersGuideEntry", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class BuyersGuideEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MakeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndYear {
            get {
                return this.EndYearField;
            }
            set {
                if ((object.ReferenceEquals(this.EndYearField, value) != true)) {
                    this.EndYearField = value;
                    this.RaisePropertyChanged("EndYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MakeID {
            get {
                return this.MakeIDField;
            }
            set {
                if ((this.MakeIDField.Equals(value) != true)) {
                    this.MakeIDField = value;
                    this.RaisePropertyChanged("MakeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModelID {
            get {
                return this.ModelIDField;
            }
            set {
                if ((this.ModelIDField.Equals(value) != true)) {
                    this.ModelIDField = value;
                    this.RaisePropertyChanged("ModelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelName {
            get {
                return this.ModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true)) {
                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartYear {
            get {
                return this.StartYearField;
            }
            set {
                if ((object.ReferenceEquals(this.StartYearField, value) != true)) {
                    this.StartYearField = value;
                    this.RaisePropertyChanged("StartYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductLineInformation", Namespace="http://schemas.datacontract.org/2004/07/OpticatEpcService")]
    [System.SerializableAttribute()]
    public partial class ProductLineInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandAAIAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductLineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandAAIAID {
            get {
                return this.BrandAAIAIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandAAIAIDField, value) != true)) {
                    this.BrandAAIAIDField = value;
                    this.RaisePropertyChanged("BrandAAIAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineName {
            get {
                return this.ProductLineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineNameField, value) != true)) {
                    this.ProductLineNameField = value;
                    this.RaisePropertyChanged("ProductLineName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Opticat3.net/WS/OpticatEpcService/", ConfigurationName="Opticat.IOpticatEpcService")]
    public interface IOpticatEpcService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYears", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYearsResponse")]
        int[] GetYears();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYears", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYearsResponse")]
        System.Threading.Tasks.Task<int[]> GetYearsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYearsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYearsExtResponse")]
        int[] GetYearsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYearsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetYearsExtResponse")]
        System.Threading.Tasks.Task<int[]> GetYearsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakes", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakesResponse")]
        EPWI.Web.Opticat.AcesMake[] GetMakes(int yearID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakes", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakesResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesMake[]> GetMakesAsync(int yearID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakesExtResponse")]
        EPWI.Web.Opticat.AcesMake[] GetMakesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetMakesExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesMake[]> GetMakesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModels", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModelsResponse")]
        EPWI.Web.Opticat.AcesModel[] GetModels(int yearID, int makeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModels", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModelsResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesModel[]> GetModelsAsync(int yearID, int makeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModelsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModelsExtResponse")]
        EPWI.Web.Opticat.AcesModel[] GetModelsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModelsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetModelsExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesModel[]> GetModelsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicleRespons" +
            "e")]
        EPWI.Web.Opticat.AcesBaseVehicle GetBaseVehicle(int yearID, int makeID, int modelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicleRespons" +
            "e")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBaseVehicle> GetBaseVehicleAsync(int yearID, int makeID, int modelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicleExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicleExtResp" +
            "onse")]
        EPWI.Web.Opticat.AcesBaseVehicle GetBaseVehicleExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicleExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBaseVehicleExtResp" +
            "onse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBaseVehicle> GetBaseVehicleExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubmodelsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubmodelsExtRespon" +
            "se")]
        EPWI.Web.Opticat.AcesSubModel[] GetSubmodelsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubmodelsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubmodelsExtRespon" +
            "se")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSubModel[]> GetSubmodelsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionsByLeg" +
            "acyVehicle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionsByLeg" +
            "acyVehicleResponse")]
        EPWI.Web.Opticat.AcesTransmission[] GetTransmissionsByLegacyVehicle(int[] legacyVehicleIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionsByLeg" +
            "acyVehicle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionsByLeg" +
            "acyVehicleResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesTransmission[]> GetTransmissionsByLegacyVehicleAsync(int[] legacyVehicleIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByBaseVehi" +
            "cle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByBaseVehi" +
            "cleResponse")]
        EPWI.Web.Opticat.AcesVehicle[] GetVehiclesByBaseVehicle(int baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByBaseVehi" +
            "cle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByBaseVehi" +
            "cleResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesVehicle[]> GetVehiclesByBaseVehicleAsync(int baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByLegacyVe" +
            "hicle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByLegacyVe" +
            "hicleResponse")]
        EPWI.Web.Opticat.AcesVehicle[] GetVehiclesByLegacyVehicle(int[] legacyVehicleIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByLegacyVe" +
            "hicle", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehiclesByLegacyVe" +
            "hicleResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesVehicle[]> GetVehiclesByLegacyVehicleAsync(int[] legacyVehicleIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategories", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategoriesResponse" +
            "")]
        EPWI.Web.Opticat.AcesCategory[] GetCategories(System.Nullable<int> baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategories", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategoriesResponse" +
            "")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesCategory[]> GetCategoriesAsync(System.Nullable<int> baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategoriesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategoriesExtRespo" +
            "nse")]
        EPWI.Web.Opticat.AcesCategory[] GetCategoriesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategoriesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetCategoriesExtRespo" +
            "nse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesCategory[]> GetCategoriesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategories", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategoriesRespo" +
            "nse")]
        EPWI.Web.Opticat.AcesSubCategory[] GetSubCategories(int categoryID, System.Nullable<int> baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategories", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategoriesRespo" +
            "nse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSubCategory[]> GetSubCategoriesAsync(int categoryID, System.Nullable<int> baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategoriesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategoriesExtRe" +
            "sponse")]
        EPWI.Web.Opticat.AcesSubCategory[] GetSubCategoriesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategoriesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSubCategoriesExtRe" +
            "sponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSubCategory[]> GetSubCategoriesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypes", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypesResponse")]
        EPWI.Web.Opticat.AcesPartType[] GetPartTypes(int subCategoryID, System.Nullable<int> baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypes", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypesResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartType[]> GetPartTypesAsync(int subCategoryID, System.Nullable<int> baseVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypesExtRespon" +
            "se")]
        EPWI.Web.Opticat.AcesPartType[] GetPartTypesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartTypesExtRespon" +
            "se")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartType[]> GetPartTypesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionQualifiers" +
            "", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionQualifiers" +
            "Response")]
        EPWI.Web.Opticat.EpcPositionQualifiers GetPositionQualifiers(int baseVehicleID, int partTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionQualifiers" +
            "", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionQualifiers" +
            "Response")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPositionQualifiers> GetPositionQualifiersAsync(int baseVehicleID, int partTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionsExtRespon" +
            "se")]
        EPWI.Web.Opticat.EpcPositionQualifiers GetPositionsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPositionsExtRespon" +
            "se")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPositionQualifiers> GetPositionsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleQualifiers", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleQualifiersR" +
            "esponse")]
        EPWI.Web.Opticat.EpcVehicleQualifiers GetVehicleQualifiers(int baseVehicleID, int partTypeID, System.Nullable<short> positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleQualifiers", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleQualifiersR" +
            "esponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcVehicleQualifiers> GetVehicleQualifiersAsync(int baseVehicleID, int partTypeID, System.Nullable<short> positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleConfigQuali" +
            "fiers", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleConfigQuali" +
            "fiersResponse")]
        EPWI.Web.Opticat.EpcVehicleConfigQualifiers GetVehicleConfigQualifiers(int baseVehicleID, int[] vehicleIDs, int partTypeID, System.Nullable<short> positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleConfigQuali" +
            "fiers", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleConfigQuali" +
            "fiersResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcVehicleConfigQualifiers> GetVehicleConfigQualifiersAsync(int baseVehicleID, int[] vehicleIDs, int partTypeID, System.Nullable<short> positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartApps", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartAppsResponse")]
        EPWI.Web.Opticat.EpcPartApp[] GetPartApps(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartApps", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartAppsResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartApp[]> GetPartAppsAsync(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartAppsRange", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartAppsRangeRespo" +
            "nse")]
        EPWI.Web.Opticat.AcesPartAppsContainer GetPartAppsRange(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID, int startNumber, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartAppsRange", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetPartAppsRangeRespo" +
            "nse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartAppsContainer> GetPartAppsRangeAsync(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID, int startNumber, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoRangeEx" +
            "t", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoRangeEx" +
            "tResponse")]
        EPWI.Web.Opticat.ProductInformationContainer GetProductInfoRangeExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoRangeEx" +
            "t", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoRangeEx" +
            "tResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetProductInfoRangeExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoBySKUEx" +
            "t", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoBySKUEx" +
            "tResponse")]
        EPWI.Web.Opticat.ProductInformationContainer GetProductInfoBySKUExt(EPWI.Web.Opticat.Credentials credentials, string inSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoBySKUEx" +
            "t", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoBySKUEx" +
            "tResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetProductInfoBySKUExtAsync(EPWI.Web.Opticat.Credentials credentials, string inSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoByBrand" +
            "AAIAExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoByBrand" +
            "AAIAExtResponse")]
        EPWI.Web.Opticat.ProductInformationContainer GetProductInfoByBrandAAIAExt(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoByBrand" +
            "AAIAExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductInfoByBrand" +
            "AAIAExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetProductInfoByBrandAAIAExtAsync(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionExtResponse")]
        EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationExt(EPWI.Web.Opticat.Credentials credentials, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationExtAsync(EPWI.Web.Opticat.Credentials credentials, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByBrandAAIAExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByBrandAAIAExtResponse")]
        EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationByBrandAAIAExt(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByBrandAAIAExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByBrandAAIAExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationByBrandAAIAExtAsync(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByProductLineIDExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByProductLineIDExtResponse")]
        EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationByProductLineIDExt(EPWI.Web.Opticat.Credentials credentials, int ProductLineID, string partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByProductLineIDExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionByProductLineIDExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationByProductLineIDExtAsync(EPWI.Web.Opticat.Credentials credentials, int ProductLineID, string partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionBySKUExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionBySKUExtResponse")]
        EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationBySKUExt(EPWI.Web.Opticat.Credentials credentials, string inSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionBySKUExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductMetaInforma" +
            "tionBySKUExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationBySKUExtAsync(EPWI.Web.Opticat.Credentials credentials, string inSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetImagesByPartNumber" +
            "AndBrandAAIAID", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetImagesByPartNumber" +
            "AndBrandAAIAIDResponse")]
        string[] GetImagesByPartNumberAndBrandAAIAID(EPWI.Web.Opticat.Credentials inCreds, string inPartNumber, string inBrandAAIA, int inBaseVehicleID, int inPartTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetImagesByPartNumber" +
            "AndBrandAAIAID", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetImagesByPartNumber" +
            "AndBrandAAIAIDResponse")]
        System.Threading.Tasks.Task<string[]> GetImagesByPartNumberAndBrandAAIAIDAsync(EPWI.Web.Opticat.Credentials inCreds, string inPartNumber, string inBrandAAIA, int inBaseVehicleID, int inPartTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBuyersGuideByProdu" +
            "ctIDExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBuyersGuideByProdu" +
            "ctIDExtResponse")]
        EPWI.Web.Opticat.BuyersGuideEntry[] GetBuyersGuideByProductIDExt(EPWI.Web.Opticat.Credentials inCreds, int inProductID, int inPartTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBuyersGuideByProdu" +
            "ctIDExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBuyersGuideByProdu" +
            "ctIDExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.BuyersGuideEntry[]> GetBuyersGuideByProductIDExtAsync(EPWI.Web.Opticat.Credentials inCreds, int inProductID, int inPartTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleLookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleLookupExtRe" +
            "sponse")]
        EPWI.Web.Opticat.ProductInformationContainer GetVehicleLookupExt(EPWI.Web.Opticat.Credentials Credentials, EPWI.Web.Opticat.OpticatLookupFilter FilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleLookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetVehicleLookupExtRe" +
            "sponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetVehicleLookupExtAsync(EPWI.Web.Opticat.Credentials Credentials, EPWI.Web.Opticat.OpticatLookupFilter FilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLinesContai" +
            "ningSubCategoryInfo", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLinesContai" +
            "ningSubCategoryInfoResponse")]
        EPWI.Web.Opticat.ProductLineInformation[] GetProductLinesContainingSubCategoryInfo(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLinesContai" +
            "ningSubCategoryInfo", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLinesContai" +
            "ningSubCategoryInfoResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> GetProductLinesContainingSubCategoryInfoAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLineInforma" +
            "tion", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLineInforma" +
            "tionResponse")]
        EPWI.Web.Opticat.ProductLineInformation[] GetProductLineInformation(EPWI.Web.Opticat.Credentials Credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLineInforma" +
            "tion", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetProductLineInforma" +
            "tionResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> GetProductLineInformationAsync(EPWI.Web.Opticat.Credentials Credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetEnginesByOpticatLo" +
            "okupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetEnginesByOpticatLo" +
            "okupExtResponse")]
        EPWI.Web.Opticat.AcesEngineConfig[] GetEnginesByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetEnginesByOpticatLo" +
            "okupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetEnginesByOpticatLo" +
            "okupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesEngineConfig[]> GetEnginesByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBrakesByOpticatLoo" +
            "kupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBrakesByOpticatLoo" +
            "kupExtResponse")]
        EPWI.Web.Opticat.AcesBrakeConfig[] GetBrakesByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBrakesByOpticatLoo" +
            "kupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBrakesByOpticatLoo" +
            "kupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBrakeConfig[]> GetBrakesByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBedByOpticatLookup" +
            "Ext", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBedByOpticatLookup" +
            "ExtResponse")]
        EPWI.Web.Opticat.AcesBedConfig[] GetBedByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBedByOpticatLookup" +
            "Ext", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetBedByOpticatLookup" +
            "ExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBedConfig[]> GetBedByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetDriveTypeByOpticat" +
            "LookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetDriveTypeByOpticat" +
            "LookupExtResponse")]
        EPWI.Web.Opticat.AcesDriveType[] GetDriveTypeByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetDriveTypeByOpticat" +
            "LookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetDriveTypeByOpticat" +
            "LookupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesDriveType[]> GetDriveTypeByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSteeringByOpticatL" +
            "ookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSteeringByOpticatL" +
            "ookupExtResponse")]
        EPWI.Web.Opticat.AcesSteeringConfig[] GetSteeringByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSteeringByOpticatL" +
            "ookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSteeringByOpticatL" +
            "ookupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSteeringConfig[]> GetSteeringByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSpringTypeByOptica" +
            "tLookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSpringTypeByOptica" +
            "tLookupExtResponse")]
        EPWI.Web.Opticat.AcesSpringTypeConfig[] GetSpringTypeByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSpringTypeByOptica" +
            "tLookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetSpringTypeByOptica" +
            "tLookupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSpringTypeConfig[]> GetSpringTypeByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionByOpti" +
            "catLookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionByOpti" +
            "catLookupExtResponse")]
        EPWI.Web.Opticat.AcesTransmission[] GetTransmissionByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionByOpti" +
            "catLookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetTransmissionByOpti" +
            "catLookupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesTransmission[]> GetTransmissionByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetWheelbaseByOpticat" +
            "LookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetWheelbaseByOpticat" +
            "LookupExtResponse")]
        EPWI.Web.Opticat.AcesWheelbase[] GetWheelbaseByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetWheelbaseByOpticat" +
            "LookupExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/GetWheelbaseByOpticat" +
            "LookupExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesWheelbase[]> GetWheelbaseByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPositionsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPositionsExtR" +
            "esponse")]
        EPWI.Web.Opticat.EpcPositionQualifiers EPWI_GetPositionsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPositionsExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPositionsExtR" +
            "esponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPositionQualifiers> EPWI_GetPositionsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingSubCategoryInfoExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingSubCategoryInfoExtResponse")]
        EPWI.Web.Opticat.ProductLineInformation[] EPWI_GetProductLinesContainingSubCategoryInfoExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingSubCategoryInfoExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingSubCategoryInfoExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> EPWI_GetProductLinesContainingSubCategoryInfoExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingPartTypeInfoExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingPartTypeInfoExtResponse")]
        EPWI.Web.Opticat.ProductLineInformation[] EPWI_GetProductLinesContainingPartTypeInfoExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingPartTypeInfoExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductLinesC" +
            "ontainingPartTypeInfoExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> EPWI_GetProductLinesContainingPartTypeInfoExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetVehicleLookup" +
            "Ext", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetVehicleLookup" +
            "ExtResponse")]
        EPWI.Web.Opticat.ProductInformationContainer EPWI_GetVehicleLookupExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetVehicleLookup" +
            "Ext", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetVehicleLookup" +
            "ExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> EPWI_GetVehicleLookupExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPartTypesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPartTypesExtR" +
            "esponse")]
        EPWI.Web.Opticat.AcesPartType[] EPWI_GetPartTypesExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPartTypesExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetPartTypesExtR" +
            "esponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartType[]> EPWI_GetPartTypesExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductInfoRa" +
            "ngeExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductInfoRa" +
            "ngeExtResponse")]
        EPWI.Web.Opticat.ProductInformationContainer EPWI_GetProductInfoRangeExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductInfoRa" +
            "ngeExt", ReplyAction="http://Opticat3.net/WS/OpticatEpcService/IOpticatEpcService/EPWI_GetProductInfoRa" +
            "ngeExtResponse")]
        System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> EPWI_GetProductInfoRangeExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOpticatEpcServiceChannel : EPWI.Web.Opticat.IOpticatEpcService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpticatEpcServiceClient : System.ServiceModel.ClientBase<EPWI.Web.Opticat.IOpticatEpcService>, EPWI.Web.Opticat.IOpticatEpcService {
        
        public OpticatEpcServiceClient() {
        }
        
        public OpticatEpcServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OpticatEpcServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpticatEpcServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpticatEpcServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int[] GetYears() {
            return base.Channel.GetYears();
        }
        
        public System.Threading.Tasks.Task<int[]> GetYearsAsync() {
            return base.Channel.GetYearsAsync();
        }
        
        public int[] GetYearsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetYearsExt(credentials, infilter);
        }
        
        public System.Threading.Tasks.Task<int[]> GetYearsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetYearsExtAsync(credentials, infilter);
        }
        
        public EPWI.Web.Opticat.AcesMake[] GetMakes(int yearID) {
            return base.Channel.GetMakes(yearID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesMake[]> GetMakesAsync(int yearID) {
            return base.Channel.GetMakesAsync(yearID);
        }
        
        public EPWI.Web.Opticat.AcesMake[] GetMakesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetMakesExt(credentials, infilter);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesMake[]> GetMakesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetMakesExtAsync(credentials, infilter);
        }
        
        public EPWI.Web.Opticat.AcesModel[] GetModels(int yearID, int makeID) {
            return base.Channel.GetModels(yearID, makeID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesModel[]> GetModelsAsync(int yearID, int makeID) {
            return base.Channel.GetModelsAsync(yearID, makeID);
        }
        
        public EPWI.Web.Opticat.AcesModel[] GetModelsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetModelsExt(credentials, infilter);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesModel[]> GetModelsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetModelsExtAsync(credentials, infilter);
        }
        
        public EPWI.Web.Opticat.AcesBaseVehicle GetBaseVehicle(int yearID, int makeID, int modelID) {
            return base.Channel.GetBaseVehicle(yearID, makeID, modelID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBaseVehicle> GetBaseVehicleAsync(int yearID, int makeID, int modelID) {
            return base.Channel.GetBaseVehicleAsync(yearID, makeID, modelID);
        }
        
        public EPWI.Web.Opticat.AcesBaseVehicle GetBaseVehicleExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetBaseVehicleExt(credentials, infilter);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBaseVehicle> GetBaseVehicleExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter infilter) {
            return base.Channel.GetBaseVehicleExtAsync(credentials, infilter);
        }
        
        public EPWI.Web.Opticat.AcesSubModel[] GetSubmodelsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSubmodelsExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSubModel[]> GetSubmodelsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSubmodelsExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesTransmission[] GetTransmissionsByLegacyVehicle(int[] legacyVehicleIDs) {
            return base.Channel.GetTransmissionsByLegacyVehicle(legacyVehicleIDs);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesTransmission[]> GetTransmissionsByLegacyVehicleAsync(int[] legacyVehicleIDs) {
            return base.Channel.GetTransmissionsByLegacyVehicleAsync(legacyVehicleIDs);
        }
        
        public EPWI.Web.Opticat.AcesVehicle[] GetVehiclesByBaseVehicle(int baseVehicleID) {
            return base.Channel.GetVehiclesByBaseVehicle(baseVehicleID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesVehicle[]> GetVehiclesByBaseVehicleAsync(int baseVehicleID) {
            return base.Channel.GetVehiclesByBaseVehicleAsync(baseVehicleID);
        }
        
        public EPWI.Web.Opticat.AcesVehicle[] GetVehiclesByLegacyVehicle(int[] legacyVehicleIDs) {
            return base.Channel.GetVehiclesByLegacyVehicle(legacyVehicleIDs);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesVehicle[]> GetVehiclesByLegacyVehicleAsync(int[] legacyVehicleIDs) {
            return base.Channel.GetVehiclesByLegacyVehicleAsync(legacyVehicleIDs);
        }
        
        public EPWI.Web.Opticat.AcesCategory[] GetCategories(System.Nullable<int> baseVehicleID) {
            return base.Channel.GetCategories(baseVehicleID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesCategory[]> GetCategoriesAsync(System.Nullable<int> baseVehicleID) {
            return base.Channel.GetCategoriesAsync(baseVehicleID);
        }
        
        public EPWI.Web.Opticat.AcesCategory[] GetCategoriesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetCategoriesExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesCategory[]> GetCategoriesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetCategoriesExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesSubCategory[] GetSubCategories(int categoryID, System.Nullable<int> baseVehicleID) {
            return base.Channel.GetSubCategories(categoryID, baseVehicleID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSubCategory[]> GetSubCategoriesAsync(int categoryID, System.Nullable<int> baseVehicleID) {
            return base.Channel.GetSubCategoriesAsync(categoryID, baseVehicleID);
        }
        
        public EPWI.Web.Opticat.AcesSubCategory[] GetSubCategoriesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSubCategoriesExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSubCategory[]> GetSubCategoriesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSubCategoriesExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesPartType[] GetPartTypes(int subCategoryID, System.Nullable<int> baseVehicleID) {
            return base.Channel.GetPartTypes(subCategoryID, baseVehicleID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartType[]> GetPartTypesAsync(int subCategoryID, System.Nullable<int> baseVehicleID) {
            return base.Channel.GetPartTypesAsync(subCategoryID, baseVehicleID);
        }
        
        public EPWI.Web.Opticat.AcesPartType[] GetPartTypesExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetPartTypesExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartType[]> GetPartTypesExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetPartTypesExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.EpcPositionQualifiers GetPositionQualifiers(int baseVehicleID, int partTypeID) {
            return base.Channel.GetPositionQualifiers(baseVehicleID, partTypeID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPositionQualifiers> GetPositionQualifiersAsync(int baseVehicleID, int partTypeID) {
            return base.Channel.GetPositionQualifiersAsync(baseVehicleID, partTypeID);
        }
        
        public EPWI.Web.Opticat.EpcPositionQualifiers GetPositionsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetPositionsExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPositionQualifiers> GetPositionsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetPositionsExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.EpcVehicleQualifiers GetVehicleQualifiers(int baseVehicleID, int partTypeID, System.Nullable<short> positionID) {
            return base.Channel.GetVehicleQualifiers(baseVehicleID, partTypeID, positionID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcVehicleQualifiers> GetVehicleQualifiersAsync(int baseVehicleID, int partTypeID, System.Nullable<short> positionID) {
            return base.Channel.GetVehicleQualifiersAsync(baseVehicleID, partTypeID, positionID);
        }
        
        public EPWI.Web.Opticat.EpcVehicleConfigQualifiers GetVehicleConfigQualifiers(int baseVehicleID, int[] vehicleIDs, int partTypeID, System.Nullable<short> positionID) {
            return base.Channel.GetVehicleConfigQualifiers(baseVehicleID, vehicleIDs, partTypeID, positionID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcVehicleConfigQualifiers> GetVehicleConfigQualifiersAsync(int baseVehicleID, int[] vehicleIDs, int partTypeID, System.Nullable<short> positionID) {
            return base.Channel.GetVehicleConfigQualifiersAsync(baseVehicleID, vehicleIDs, partTypeID, positionID);
        }
        
        public EPWI.Web.Opticat.EpcPartApp[] GetPartApps(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID) {
            return base.Channel.GetPartApps(baseVehicleID, vehicleIDs, vehicleConfigIDs, partTypeID, positionID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartApp[]> GetPartAppsAsync(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID) {
            return base.Channel.GetPartAppsAsync(baseVehicleID, vehicleIDs, vehicleConfigIDs, partTypeID, positionID);
        }
        
        public EPWI.Web.Opticat.AcesPartAppsContainer GetPartAppsRange(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID, int startNumber, int count) {
            return base.Channel.GetPartAppsRange(baseVehicleID, vehicleIDs, vehicleConfigIDs, partTypeID, positionID, startNumber, count);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartAppsContainer> GetPartAppsRangeAsync(int baseVehicleID, int[] vehicleIDs, int[] vehicleConfigIDs, int partTypeID, System.Nullable<short> positionID, int startNumber, int count) {
            return base.Channel.GetPartAppsRangeAsync(baseVehicleID, vehicleIDs, vehicleConfigIDs, partTypeID, positionID, startNumber, count);
        }
        
        public EPWI.Web.Opticat.ProductInformationContainer GetProductInfoRangeExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetProductInfoRangeExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetProductInfoRangeExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetProductInfoRangeExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.ProductInformationContainer GetProductInfoBySKUExt(EPWI.Web.Opticat.Credentials credentials, string inSKU) {
            return base.Channel.GetProductInfoBySKUExt(credentials, inSKU);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetProductInfoBySKUExtAsync(EPWI.Web.Opticat.Credentials credentials, string inSKU) {
            return base.Channel.GetProductInfoBySKUExtAsync(credentials, inSKU);
        }
        
        public EPWI.Web.Opticat.ProductInformationContainer GetProductInfoByBrandAAIAExt(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber) {
            return base.Channel.GetProductInfoByBrandAAIAExt(credentials, brandAAIAID, partNumber);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetProductInfoByBrandAAIAExtAsync(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber) {
            return base.Channel.GetProductInfoByBrandAAIAExtAsync(credentials, brandAAIAID, partNumber);
        }
        
        public EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationExt(EPWI.Web.Opticat.Credentials credentials, int productId) {
            return base.Channel.GetProductMetaInformationExt(credentials, productId);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationExtAsync(EPWI.Web.Opticat.Credentials credentials, int productId) {
            return base.Channel.GetProductMetaInformationExtAsync(credentials, productId);
        }
        
        public EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationByBrandAAIAExt(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber) {
            return base.Channel.GetProductMetaInformationByBrandAAIAExt(credentials, brandAAIAID, partNumber);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationByBrandAAIAExtAsync(EPWI.Web.Opticat.Credentials credentials, string brandAAIAID, string partNumber) {
            return base.Channel.GetProductMetaInformationByBrandAAIAExtAsync(credentials, brandAAIAID, partNumber);
        }
        
        public EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationByProductLineIDExt(EPWI.Web.Opticat.Credentials credentials, int ProductLineID, string partNumber) {
            return base.Channel.GetProductMetaInformationByProductLineIDExt(credentials, ProductLineID, partNumber);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationByProductLineIDExtAsync(EPWI.Web.Opticat.Credentials credentials, int ProductLineID, string partNumber) {
            return base.Channel.GetProductMetaInformationByProductLineIDExtAsync(credentials, ProductLineID, partNumber);
        }
        
        public EPWI.Web.Opticat.EpcPartAppMetaInformation[] GetProductMetaInformationBySKUExt(EPWI.Web.Opticat.Credentials credentials, string inSKU) {
            return base.Channel.GetProductMetaInformationBySKUExt(credentials, inSKU);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPartAppMetaInformation[]> GetProductMetaInformationBySKUExtAsync(EPWI.Web.Opticat.Credentials credentials, string inSKU) {
            return base.Channel.GetProductMetaInformationBySKUExtAsync(credentials, inSKU);
        }
        
        public string[] GetImagesByPartNumberAndBrandAAIAID(EPWI.Web.Opticat.Credentials inCreds, string inPartNumber, string inBrandAAIA, int inBaseVehicleID, int inPartTypeID) {
            return base.Channel.GetImagesByPartNumberAndBrandAAIAID(inCreds, inPartNumber, inBrandAAIA, inBaseVehicleID, inPartTypeID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetImagesByPartNumberAndBrandAAIAIDAsync(EPWI.Web.Opticat.Credentials inCreds, string inPartNumber, string inBrandAAIA, int inBaseVehicleID, int inPartTypeID) {
            return base.Channel.GetImagesByPartNumberAndBrandAAIAIDAsync(inCreds, inPartNumber, inBrandAAIA, inBaseVehicleID, inPartTypeID);
        }
        
        public EPWI.Web.Opticat.BuyersGuideEntry[] GetBuyersGuideByProductIDExt(EPWI.Web.Opticat.Credentials inCreds, int inProductID, int inPartTypeID) {
            return base.Channel.GetBuyersGuideByProductIDExt(inCreds, inProductID, inPartTypeID);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.BuyersGuideEntry[]> GetBuyersGuideByProductIDExtAsync(EPWI.Web.Opticat.Credentials inCreds, int inProductID, int inPartTypeID) {
            return base.Channel.GetBuyersGuideByProductIDExtAsync(inCreds, inProductID, inPartTypeID);
        }
        
        public EPWI.Web.Opticat.ProductInformationContainer GetVehicleLookupExt(EPWI.Web.Opticat.Credentials Credentials, EPWI.Web.Opticat.OpticatLookupFilter FilterInfo) {
            return base.Channel.GetVehicleLookupExt(Credentials, FilterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> GetVehicleLookupExtAsync(EPWI.Web.Opticat.Credentials Credentials, EPWI.Web.Opticat.OpticatLookupFilter FilterInfo) {
            return base.Channel.GetVehicleLookupExtAsync(Credentials, FilterInfo);
        }
        
        public EPWI.Web.Opticat.ProductLineInformation[] GetProductLinesContainingSubCategoryInfo(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.GetProductLinesContainingSubCategoryInfo(inCreds, inFilterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> GetProductLinesContainingSubCategoryInfoAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.GetProductLinesContainingSubCategoryInfoAsync(inCreds, inFilterInfo);
        }
        
        public EPWI.Web.Opticat.ProductLineInformation[] GetProductLineInformation(EPWI.Web.Opticat.Credentials Credentials) {
            return base.Channel.GetProductLineInformation(Credentials);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> GetProductLineInformationAsync(EPWI.Web.Opticat.Credentials Credentials) {
            return base.Channel.GetProductLineInformationAsync(Credentials);
        }
        
        public EPWI.Web.Opticat.AcesEngineConfig[] GetEnginesByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetEnginesByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesEngineConfig[]> GetEnginesByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetEnginesByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesBrakeConfig[] GetBrakesByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetBrakesByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBrakeConfig[]> GetBrakesByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetBrakesByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesBedConfig[] GetBedByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetBedByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesBedConfig[]> GetBedByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetBedByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesDriveType[] GetDriveTypeByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetDriveTypeByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesDriveType[]> GetDriveTypeByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetDriveTypeByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesSteeringConfig[] GetSteeringByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSteeringByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSteeringConfig[]> GetSteeringByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSteeringByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesSpringTypeConfig[] GetSpringTypeByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSpringTypeByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesSpringTypeConfig[]> GetSpringTypeByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetSpringTypeByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesTransmission[] GetTransmissionByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetTransmissionByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesTransmission[]> GetTransmissionByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetTransmissionByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.AcesWheelbase[] GetWheelbaseByOpticatLookupExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetWheelbaseByOpticatLookupExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesWheelbase[]> GetWheelbaseByOpticatLookupExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.GetWheelbaseByOpticatLookupExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.EpcPositionQualifiers EPWI_GetPositionsExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.EPWI_GetPositionsExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.EpcPositionQualifiers> EPWI_GetPositionsExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.EPWI_GetPositionsExtAsync(credentials, filterInfo);
        }
        
        public EPWI.Web.Opticat.ProductLineInformation[] EPWI_GetProductLinesContainingSubCategoryInfoExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetProductLinesContainingSubCategoryInfoExt(inCreds, inFilterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> EPWI_GetProductLinesContainingSubCategoryInfoExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetProductLinesContainingSubCategoryInfoExtAsync(inCreds, inFilterInfo);
        }
        
        public EPWI.Web.Opticat.ProductLineInformation[] EPWI_GetProductLinesContainingPartTypeInfoExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetProductLinesContainingPartTypeInfoExt(inCreds, inFilterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductLineInformation[]> EPWI_GetProductLinesContainingPartTypeInfoExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetProductLinesContainingPartTypeInfoExtAsync(inCreds, inFilterInfo);
        }
        
        public EPWI.Web.Opticat.ProductInformationContainer EPWI_GetVehicleLookupExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetVehicleLookupExt(inCreds, inFilterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> EPWI_GetVehicleLookupExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetVehicleLookupExtAsync(inCreds, inFilterInfo);
        }
        
        public EPWI.Web.Opticat.AcesPartType[] EPWI_GetPartTypesExt(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetPartTypesExt(inCreds, inFilterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.AcesPartType[]> EPWI_GetPartTypesExtAsync(EPWI.Web.Opticat.Credentials inCreds, EPWI.Web.Opticat.OpticatLookupFilter inFilterInfo) {
            return base.Channel.EPWI_GetPartTypesExtAsync(inCreds, inFilterInfo);
        }
        
        public EPWI.Web.Opticat.ProductInformationContainer EPWI_GetProductInfoRangeExt(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.EPWI_GetProductInfoRangeExt(credentials, filterInfo);
        }
        
        public System.Threading.Tasks.Task<EPWI.Web.Opticat.ProductInformationContainer> EPWI_GetProductInfoRangeExtAsync(EPWI.Web.Opticat.Credentials credentials, EPWI.Web.Opticat.OpticatLookupFilter filterInfo) {
            return base.Channel.EPWI_GetProductInfoRangeExtAsync(credentials, filterInfo);
        }
    }
}
